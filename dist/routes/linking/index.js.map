{"version":3,"sources":["../../../app/routes/linking/index.js"],"names":["router","express","Router","PSS_BASE_URL","process","env","tenantId","TENANT_ID","secret","SECRET","post","req","res","userExternalId","STORE","users","uuid","hashStr","signature","method","headers","url","data","then","response","console","log","json","msg","error","status"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf;;AACA,IAAMC,YAAY,GAAGC,OAAO,CAACC,GAAR,CAAYF,YAAjC;AACA,IAAMG,QAAQ,GAAGF,OAAO,CAACC,GAAR,CAAYE,SAA7B;AACA,IAAMC,MAAM,GAAGJ,OAAO,CAACC,GAAR,CAAYI,MAA3B;AAEAT,MAAM,CAACU,IAAP,CAAY,GAAZ,EAAiB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7B,MAAMC,cAAc,GAAGC,sBAAMC,KAAN,CAAY,CAAZ,EAAeC,IAAtC;AACD,MAAMC,OAAO,aAAMX,QAAN,SAAiBO,cAAjB,SAAkCL,MAAlC,CAAb;AACC,MAAMU,SAAS,GAAG,kCAAoBD,OAApB,CAAlB;AAED,yBAAM;AACHE,IAAAA,MAAM,EAAE,MADL;AAELC,IAAAA,OAAO,EAAE;AACR,sBAAgB;AADR,KAFJ;AAKHC,IAAAA,GAAG,YAAKlB,YAAL,kBALA;AAMLmB,IAAAA,IAAI,EAAE;AACFhB,MAAAA,QAAQ,EAARA,QADE;AAEFO,MAAAA,cAAc,EAAdA,cAFE;AAGFK,MAAAA,SAAS,EAATA;AAHE;AAND,GAAN,EAYEK,IAZF,CAYO,UAACC,QAAD,EAAc;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACF,IAArB;AACAV,IAAAA,GAAG,CAACe,IAAJ,CAAS;AACJC,MAAAA,GAAG,EAAE,oBADD;AAEJN,MAAAA,IAAI,EAAEE,QAAQ,CAACF;AAFX,KAAT;AAIA,GAlBF,WAmBQ,UAACO,KAAD,EAAW;AACjBjB,IAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AACpBC,MAAAA,GAAG,EAAE;AADe,KAArB;AAGA,GAvBF;AAwBA,CA7BD;eA+Be5B,M","sourcesContent":["import express from 'express';\r\nimport fetch from 'cross-fetch';\r\nimport STORE from '../../data/dummy-user';\r\nimport { AUTH_TYPES } from '../../util/constants';\r\nimport { createHashSignature } from '../../util/helpers';\r\nimport axios from 'axios'\r\n\r\nconst router = express.Router();\r\nconst PSS_BASE_URL = process.env.PSS_BASE_URL;\r\nconst tenantId = process.env.TENANT_ID;\r\nconst secret = process.env.SECRET;\r\n\r\nrouter.post('/', (req, res) => {\r\n  const userExternalId = STORE.users[0].uuid;\r\n\tconst hashStr = `${tenantId}${userExternalId}${secret}`;\r\n  const signature = createHashSignature(hashStr);\r\n  \r\n\taxios({\r\n    method: 'post',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json'\r\n    },\r\n    url: `${PSS_BASE_URL}/gateway/link`,\r\n\t\tdata: {\r\n      tenantId,\r\n      userExternalId,\r\n      signature\r\n    }\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\tconsole.log(response.data);\r\n\t\t\tres.json({\r\n        msg: 'Linking successful',\r\n        data: response.data\r\n\t\t\t});\r\n\t\t})\r\n\t\t.catch((error) => {\r\n\t\t\tres.status(500).json({\r\n\t\t\t\tmsg: 'Linking unsuccessful'\r\n      });\r\n\t\t});\r\n});\r\n\r\nexport default router;\r\n"],"file":"index.js"}