{"version":3,"sources":["../../../app/routes/check/index.js"],"names":["router","express","Router","PSS_BASE_URL","process","env","tenantId","TENANT_ID","secret","SECRET","post","req","res","sessionExternalId","query","sei","authParams","guiText","guiHeader","type","AUTH_TYPES","OK","hashStr","signature","method","headers","url","data","then","response","json","msg","error","status"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAGA;;AAGA;;;;AAEA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf;;AACA,IAAMC,YAAY,GAAGC,OAAO,CAACC,GAAR,CAAYF,YAAjC;AACA,IAAMG,QAAQ,GAAGF,OAAO,CAACC,GAAR,CAAYE,SAA7B;AACA,IAAMC,MAAM,GAAGJ,OAAO,CAACC,GAAR,CAAYI,MAA3B;AAEAT,MAAM,CAACU,IAAP,CAAY,GAAZ,EAAiB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7B,MAAMC,iBAAiB,GAAGF,GAAG,CAACG,KAAJ,CAAUC,GAAV,IAAiB,IAA3C;AACA,MAAMC,UAAU,GAAG;AACjBC,IAAAA,OAAO,EAAE,8BADQ;AAEjBC,IAAAA,SAAS,EAAE;AAFM,GAAnB;AAIA,MAAMC,IAAI,GAAGC,sBAAWC,EAAxB;AACA,MAAMC,OAAO,aAAMhB,QAAN,SAAiBO,iBAAjB,SAAqCL,MAArC,CAAb;AACA,MAAMe,SAAS,GAAG,kCAAoBD,OAApB,CAAlB;AAGA,yBAAM;AACFE,IAAAA,MAAM,EAAE,MADN;AAEFC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFP;AAKFC,IAAAA,GAAG,YAAKvB,YAAL,mBALD;AAMFwB,IAAAA,IAAI,EAAE;AACJrB,MAAAA,QAAQ,EAARA,QADI;AAEJO,MAAAA,iBAAiB,EAAjBA,iBAFI;AAGJM,MAAAA,IAAI,EAAJA,IAHI;AAIJH,MAAAA,UAAU,EAAVA,UAJI;AAKJO,MAAAA,SAAS,EAATA;AALI;AANJ,GAAN,EAcGK,IAdH,CAcQ,UAACC,QAAD,EAAc;AAClBjB,IAAAA,GAAG,CAACkB,IAAJ,CAAS;AACPC,MAAAA,GAAG,EAAE,2BADE;AAEPJ,MAAAA,IAAI,EAAEE,QAAQ,CAACF;AAFR,KAAT;AAID,GAnBH,WAoBS,UAACK,KAAD,EAAW;AAChBpB,IAAAA,GAAG,CAACqB,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AACnBC,MAAAA,GAAG,EAAE,6BADc;AAEnBJ,MAAAA,IAAI,EAAEK,KAAK,CAACH,QAAN,CAAeF;AAFF,KAArB;AAID,GAzBH;AA2BD,CAtCD;eAwCe3B,M","sourcesContent":["import express from 'express';\r\nimport STORE from '../../data/dummy-user';\r\nimport {\r\n  AUTH_TYPES\r\n} from '../../util/constants';\r\nimport {\r\n  createHashSignature\r\n} from '../../util/helpers';\r\nimport axios from 'axios'\r\n\r\nconst router = express.Router();\r\nconst PSS_BASE_URL = process.env.PSS_BASE_URL;\r\nconst tenantId = process.env.TENANT_ID;\r\nconst secret = process.env.SECRET;\r\n\r\nrouter.post('/', (req, res) => {\r\n  const sessionExternalId = req.query.sei || null;\r\n  const authParams = {\r\n    guiText: 'Do you okay this transaction',\r\n    guiHeader: 'Authorization requested'\r\n  };\r\n  const type = AUTH_TYPES.OK\r\n  const hashStr = `${tenantId}${sessionExternalId}${secret}`;\r\n  const signature = createHashSignature(hashStr);\r\n  \r\n\r\n  axios({\r\n      method: 'post',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      url: `${PSS_BASE_URL}/gateway/check`,\r\n      data: {\r\n        tenantId,\r\n        sessionExternalId,\r\n        type,\r\n        authParams,\r\n        signature\r\n      }\r\n    })\r\n    .then((response) => {\r\n      res.json({\r\n        msg: 'Authentication successful',\r\n        data: response.data\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      res.status(400).json({\r\n        msg: 'Authentication unsuccessful',\r\n        data: error.response.data\r\n      });\r\n    });\r\n\r\n})\r\n\r\nexport default router"],"file":"index.js"}